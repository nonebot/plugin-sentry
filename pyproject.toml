[tool.poetry]
name = "nonebot-plugin-sentry"
version = "2.0.0"
description = "Push your bot errors to Sentry.io"
license = "MIT"
authors = ["yanyongyu <yyy@nonebot.dev>"]
readme = "README.md"
homepage = "https://github.com/nonebot/plugin-sentry"
repository = "https://github.com/nonebot/plugin-sentry"
documentation = "https://github.com/nonebot/plugin-sentry#readme"
keywords = ["nonebot", "nonebot2", "sentry"]

[tool.poetry.dependencies]
python = "^3.9"
nonebot2 = "^2.2.0"
pydantic = ">=1.10.0, <3.0.0, !=2.5.0, !=2.5.1"
sentry-sdk = { version = "^2.0.0", extras = ["loguru"] }

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.0"
isort = "^5.10.1"
black = "^24.0.0"
nonemoji = "^0.1.3"
pre-commit = "^3.3.0"

[tool.black]
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
'''

[tool.isort]
profile = "black"
line_length = 88
length_sort = true
skip_gitignore = true
force_sort_within_sections = true
extra_standard_library = ["typing_extensions"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
  "F", # Pyflakes
  "W", # pycodestyle warnings
  "E", # pycodestyle errors
  # "I",     # isort
  "UP",    # pyupgrade
  "ASYNC", # flake8-async
  "B",     # flake8-bugbear
  "C4",    # flake8-comprehensions
  "T10",   # flake8-debugger
  "T20",   # flake8-print
  "PYI",   # flake8-pyi
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "SIM",   # flake8-simplify
  "TID",   # flake8-tidy-imports
  "RUF",   # Ruff-specific rules
]
ignore = [
  "E402",   # module-import-not-at-top-of-file
  "B008",   # function-call-in-default-argument
  "RUF001", # ambiguous-unicode-character-string
  "RUF002", # ambiguous-unicode-character-docstring
  "RUF003", # ambiguous-unicode-character-comment
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.pyright]
typeCheckingMode = "standard"
reportPrivateImportUsage = false
reportShadowedImports = false
disableBytesTypePromotions = true

pythonPlatform = "All"
pythonVersion = "3.9"
defineConstant = { PYDANTIC_V2 = true }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
